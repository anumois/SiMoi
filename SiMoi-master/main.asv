clear; clc;
%% your parameter here%%
l=1; %slack value
EpL = 200; % Number of minimum data
T=15000; % number of iterations
sig = 0.5; % Size of kernel
% Decision structre is also exist as hyper parameter
%% algorithm %%
[x_train,y_train,x_valid,y_valid] = createDataset('train_feat.csv', 'train_label.csv','valid_feat.csv', 'valid_label.csv');
x_train=x_train(find((y_train<5)));
y_train=y_train(find((y_train<5)));
x_valid=x_valid(find((y_valid<5)));
y_valid=y_valid(find((y_valid<5)));
a = redistribute(y_train,EpL);
%% training 
%model= algorithm_kernelSVM_quick(x_train(:,a), y_train(a),T,l,sig);
%% validation 
[valid_p] = validation_kernelSVM(model, x_valid, x_train(:,a),sig);

%% your analysis here 


%% test 
%[x_test, y_test] = createDatasetTest('test_feat.csv', 'test_label.csv');
%[test_p] = validation(model, x_test);

%% Find Accuracy
disp('class predict')
disp([y_valid valid_p]);
%disp([y_test test_p]);
valid_acc =mean(y_valid== valid_p)*100;
%test_acc =mean(y_test == test_p)*100;
fprintf('valid_acc =%f\n',valid_acc)
%fprintf('test_acc =%f\n',test_acc)